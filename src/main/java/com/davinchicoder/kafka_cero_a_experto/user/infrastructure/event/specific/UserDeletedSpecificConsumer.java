package com.davinchicoder.kafka_cero_a_experto.user.infrastructure.event.specific;

import com.davinchicoder.kafka_cero_a_experto.autogenerated.events.user.UserDeletedEvent;
import com.davinchicoder.kafka_cero_a_experto.common.application.Mediator;
import com.davinchicoder.kafka_cero_a_experto.common.infrastructure.event.consumer.EventSpecificConsumer;
import com.davinchicoder.kafka_cero_a_experto.user.application.deleted.UserDeletedCommand;
import com.davinchicoder.kafka_cero_a_experto.user.infrastructure.event.mapper.UserEventMapper;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.messaging.Message;
import org.springframework.stereotype.Component;

@Component
@Slf4j
@RequiredArgsConstructor
public class UserDeletedSpecificConsumer implements EventSpecificConsumer<UserDeletedEvent> {

    private final Mediator mediator;
    private final UserEventMapper userEventMapper;

    @Override
    public void accept(Message<UserDeletedEvent> genericRecordMessage) {
        log.info("UserDeletedSpecificConsumer message: {}", genericRecordMessage.toString());
        UserDeletedCommand command = userEventMapper.mapToUserDeletedCommand(genericRecordMessage.getPayload());
        mediator.dispatch(command);
    }

    @Override
    public String getSchema() {
        return UserDeletedEvent.getClassSchema().getFullName();
    }
}
